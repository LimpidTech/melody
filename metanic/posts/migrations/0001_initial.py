# Generated by Django 2.0.5 on 2018-07-07 01:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import metanic.posts.renderer
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created', '-last_modified'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('subject', models.TextField()),
                ('body', models.TextField()),
                ('pinned_order', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('in_reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='replies', to='posts.Post')),
                ('sites', models.ManyToManyField(to='sites.Site')),
            ],
            options={
                'ordering': ('-pinned_order', 'created', '-last_modified'),
                'abstract': False,
            },
            bases=(metanic.posts.renderer.Renderable, models.Model),
        ),
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='posts.Post')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PostTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='posts.Post')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(unique=True)),
                ('slug', models.SlugField(blank=True, primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
                'ordering': ('created', '-last_modified'),
                'verbose_name_plural': 'topics',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('topic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='posts.Topic')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='posts.Category')),
            ],
            options={
                'abstract': False,
                'ordering': ('created', '-last_modified'),
                'verbose_name_plural': 'categories',
            },
            bases=('posts.topic',),
        ),
        migrations.AddField(
            model_name='posttopic',
            name='topic_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='posts.Topic'),
        ),
        migrations.AddField(
            model_name='post',
            name='topics',
            field=models.ManyToManyField(blank=True, editable=False, related_name='posts', through='posts.PostTopic', to='posts.Topic'),
        ),
        migrations.AddField(
            model_name='history',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='history', to='posts.Post'),
        ),
        migrations.AddField(
            model_name='postcategory',
            name='category_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='posts.Category'),
        ),
        migrations.AddField(
            model_name='post',
            name='categories',
            field=models.ManyToManyField(blank=True, editable=False, related_name='categories', through='posts.PostCategory', to='posts.Category'),
        ),
    ]
